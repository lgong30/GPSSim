#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""This module is for management of the GPS figure.
version: 1.0.0
author: Long Gong
email: long.github@gmail.com



Major Changes:
1. remove the feature of make pdf
2. make TeXBuilder class more abstract
"""


_IMPORT_ERROR_MSG = u"{0} was not detected, please run \
'pip install {0}' to install it."

try:
    from flask_script import Command
    from flask_script import Manager
    from flask_script import Server
    from flask_script import Option
    from flask_script import prompt_bool
    from flask_script import prompt_pass
except ImportError:
    print(_IMPORT_ERROR_MSG.format("flask_script"))
    exit(1)

try:
    from flask import Flask
except ImportError as msg:
    print(_IMPORT_ERROR_MSG.format("flask"))
    exit(1)

import os

from gpssim.simulator import GPSSim
from gpssim.tex_builder import TeXBuilder
import math

THIS_DIR = os.path.dirname(os.path.abspath(__file__))


class GPSSimExampleGenerator(Command):
    """Generate GPS figure"""
    option_list = (
        Option(u'--input', u'-i', action="store", dest=u"input",
               help=u"Input data (default: packets.txt)",
               type=str, default=u"packets.txt"),
        Option(u'--template', u'-t', action="store", dest=u"template",
              help=u"OPTIONAL: template file",
              type=str, default=""),
        Option(u'--template-dir', u'-D', action="store", dest=u"template_dir",
               help=u"OPTIONAL: directory which stores your template",
               type=str, default=""),
        Option(u'--output', u'-o', action="store", dest=u"output",
               help=u"Output filename (default: example.tex",
               type=str, default=u'example.tex'),
        Option(u"--output-dir", u"-d", action="store", dest=u"output_dir",
               help=u"OPTIONAL: directory to store output file",
               type=str, default="")
    )

    def __init__(self):
        super(GPSSimExampleGenerator, self).__init__()

    def run(self, input, template, template_dir, output, output_dir):
        """Generate GPS figure"""
        gps = GPSSim()
        gps.read_pkt_from_file(input)
        gps.run()

        # parameters
        h = 0.6
        xlabel_upper_bound = 15.0

        Width = 0
        Height = 0
        args = {
            "flows": [],
            "ylabels": [],
            "detailed_results": gps.to_str()
        }
        for flow_id in gps.flows:
            args['flows'].append(
                {
                    "id": flow_id,
                    "packets": []
                }
            )
            for pkt in gps.flows[flow_id]:
                args['flows'][-1]['packets'].append({"v_start_time": pkt.v_start_time, "v_finish_time": pkt.v_finish_time, "y_min":
                    flow_id - h / 2, "y_max": flow_id + h / 2})
                if Width < pkt.v_finish_time:
                    Width = pkt.v_finish_time
            if Height < flow_id:
                Height = flow_id
            args['ylabels'].append(flow_id)

        Width = int(math.ceil(Width))
        xgap = int(math.ceil(Width / xlabel_upper_bound))
        args['xlabels'] = [x for x in range(0, Width + 1, xgap)]
        args['width'] = Width + 1
        args['height'] = Height + 1

        # os.path.join(THIS_DIR, "template"), {"default": "gps_figure_template.tex"}
        tex_builder = TeXBuilder()
        tex_doc = tex_builder.make_tex(args)

        if len(output_dir) == 0:
            output_dir = THIS_DIR
        else:
            os.mkdir(output_dir)

        add_msg = "%% This file is generated by Jinja2"
        with open(os.path.join(output_dir, output), 'w') as texf:
            texf.write("%s\n" % add_msg)
            texf.write(tex_doc)


if __name__ == "__main__":
    app = Flask(__name__)
    shell_manager = Manager(app)
    shell_manager.add_command(u"make_tex", GPSSimExampleGenerator())

    shell_manager.run()











